{"ast":null,"code":"var _jsxFileName = \"/Users/kunlunwang/Documents/GitHub/HomeworkHub/HomeworkHub-version1.0.0/src/views/components/EmployeeList.js\",\n    _s = $RefreshSig$();\n\nimport { Modal, Button, Alert } from 'react-bootstrap';\nimport { useContext, useEffect, useState } from 'react';\nimport { EmployeeContext } from '../contexts/EmployeeContext';\nimport Employee from './Employee';\nimport AddForm from './AddForm';\nimport Pagination from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EmployeeList = () => {\n  _s();\n\n  const {\n    sortedEmployees\n  } = useContext(EmployeeContext);\n  const [showAlert, setShowAlert] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false); //const handleShowAlert = () =>setShowAlert(true);\n\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [employeesPerPage] = useState(10);\n\n  const handleShowAlert = () => {\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n    }, 2000);\n  };\n\n  useEffect(() => {\n    handleClose();\n    return () => {\n      handleShowAlert();\n    };\n  }, [sortedEmployees]);\n  const indexOfLastEmployee = currentPage * employeesPerPage;\n  const indexOfFirstEmployee = indexOfLastEmployee - employeesPerPage;\n  const currentEmployees = sortedEmployees.slice(indexOfFirstEmployee, indexOfLastEmployee);\n  const totalPagesNum = Math.ceil(sortedEmployees.length / employeesPerPage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Manage\", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" Student/Parents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleShow,\n            className: \"btn btn-success\",\n            \"data-toggle\": \"modal\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Add New Student/Parent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 95\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      show: showAlert,\n      variant: \"success\",\n      children: \"Student/Parent List Updated Succefully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentEmployees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(Employee, {\n            employee: employee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, employee.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 23\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      pages: totalPagesNum,\n      setCurrentPage: setCurrentPage,\n      currentEmployees: currentEmployees,\n      sortedEmployees: sortedEmployees\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Student/Parent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(AddForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EmployeeList, \"6q6C6aefH7BsUqqPWEx8kfisgX0=\");\n\n_c = EmployeeList;\nexport default EmployeeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"sources":["/Users/kunlunwang/Documents/GitHub/HomeworkHub/HomeworkHub-version1.0.0/src/views/components/EmployeeList.js"],"names":["Modal","Button","Alert","useContext","useEffect","useState","EmployeeContext","Employee","AddForm","Pagination","EmployeeList","sortedEmployees","showAlert","setShowAlert","show","setShow","handleShow","handleClose","currentPage","setCurrentPage","employeesPerPage","handleShowAlert","setTimeout","indexOfLastEmployee","indexOfFirstEmployee","currentEmployees","slice","totalPagesNum","Math","ceil","length","map","employee","id"],"mappings":"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","sourcesContent":["import { Modal, Button, Alert} from 'react-bootstrap';\nimport {useContext, useEffect, useState } from 'react';\nimport {EmployeeContext} from '../contexts/EmployeeContext';\nimport Employee from './Employee';\nimport AddForm from './AddForm';\nimport Pagination from './Pagination';\n\nconst EmployeeList = () => {\n\n    const {sortedEmployees} = useContext(EmployeeContext);\n\n    const [showAlert, setShowAlert] = useState(false);\n\n    const [show, setShow] = useState(false);\n    \n    const handleShow = () => setShow(true);\n    const handleClose = () => setShow(false);\n    //const handleShowAlert = () =>setShowAlert(true);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [employeesPerPage] = useState(10)\n\n    const handleShowAlert = () => {\n        setShowAlert(true);\n        setTimeout(()=> {\n            setShowAlert(false);\n        }, 2000)\n    }\n\n    useEffect(() => {\n        handleClose();\n\n        return () => {\n            handleShowAlert();\n        }\n    }, [sortedEmployees])\n\n    const indexOfLastEmployee = currentPage * employeesPerPage;\n    const indexOfFirstEmployee = indexOfLastEmployee - employeesPerPage;\n    const currentEmployees = sortedEmployees.slice(indexOfFirstEmployee, indexOfLastEmployee);\n    const totalPagesNum = Math.ceil(sortedEmployees.length / employeesPerPage);\n\n\n    return (\n    <>\n    <div className=\"table-title\">\n        <div className=\"row\">\n            <div className=\"col-sm-6\">\n                <h2>Manage<b> Student/Parents</b></h2>\n            </div>\n            <div className=\"col-sm-6\">\n                <Button onClick={handleShow} className=\"btn btn-success\" data-toggle=\"modal\"> <span>Add New Student/Parent</span></Button>\t\t\t\t\t\n            </div>\n        </div>\n    </div>\n\n    <Alert show={showAlert} variant=\"success\">\n        Student/Parent List Updated Succefully!\n    </Alert>\n\n    <table className=\"table table-striped table-hover\">\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Address</th>\n                <th>Phone</th>\n                <th>Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n\n                {\n                  currentEmployees.map(employee => (\n                      <tr key={employee.id}>\n                        <Employee employee={employee} />\n                    </tr>\n                  ))  \n                }\n                \n\n        </tbody>\n    </table>\n\n    <Pagination pages = {totalPagesNum}\n                setCurrentPage={setCurrentPage}\n                currentEmployees ={currentEmployees}\n                sortedEmployees = {sortedEmployees} />\n\n    <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n            <Modal.Title>\n                Add Student/Parent\n            </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <AddForm />\n        </Modal.Body>\n        <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n        </Modal.Footer>\n    </Modal>\n    </>\n    )\n}\n\nexport default EmployeeList;"]},"metadata":{},"sourceType":"module"}