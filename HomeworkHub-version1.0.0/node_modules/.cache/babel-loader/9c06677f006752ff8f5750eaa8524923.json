{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/HomeworkHub/HomeworkHub-version1.0.0/src/views/SignUp.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport axios from \"axios\";\nimport { FormGroup, FormControl } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Signup extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handleRegisterButtonClick = () => {\n      //check if passwords match here before proceeding?\n      var check = this.state.password === this.state.confirmPassword;\n\n      if (check) {\n        this.setState({\n          badUsername: true\n        });\n        var r = \"/signup?name=\" + this.state.username + \"&password=\" + this.state.password;\n        axios.get(r).then(response => {\n          console.log(response.data);\n        });\n      } else {\n        this.setState({\n          passMatch: false\n        });\n      } //need a way to notify user if password and confirmPassword are not equal\n\n    };\n\n    this.state = {\n      isLoading: false,\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      redirect: null,\n      passMatch: true,\n      badUsername: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signuppage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        size: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          autoFocus: true,\n          value: this.state.username,\n          onChange: this.handleChange.bind(this),\n          placeholder: \"Enter username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        controlId: \"password\",\n        size: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          value: this.state.password,\n          onChange: this.handleChange.bind(this),\n          type: \"password\",\n          placeholder: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        controlId: \"confirmPassword\",\n        size: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          value: this.state.confirmPassword,\n          onChange: this.handleChange.bind(this),\n          type: \"password\",\n          placeholder: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), this.state.passMatch ? null : /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Passwords do not match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 43\n      }, this), this.state.badUsername ? /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Username already in use\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Already a user? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \" Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        block: true,\n        size: \"lg\",\n        onClick: this.handleRegisterButtonClick,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/HomeworkHub/HomeworkHub-version1.0.0/src/views/SignUp.js"],"names":["React","Component","Redirect","axios","FormGroup","FormControl","Signup","constructor","handleChange","event","setState","target","id","value","handleRegisterButtonClick","check","state","password","confirmPassword","badUsername","r","username","get","then","response","console","log","data","passMatch","isLoading","redirect","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport  { Redirect } from 'react-router-dom';\nimport axios from \"axios\";\nimport { FormGroup,\n         FormControl,\n         } from \"react-bootstrap\";\n\n\nexport default class Signup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      redirect: null,\n      passMatch: true,\n      badUsername: false,\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  //Cam added this\n  handleRegisterButtonClick = () => {\n\n    //check if passwords match here before proceeding?\n\tvar check = this.state.password === this.state.confirmPassword;\n\tif (check) {\n        this.setState({\n            badUsername: true,\n        });\n\t\t var r = \"/signup?name=\"+this.state.username+\"&password=\"+this.state.password;\n          axios.get(r).then(response => {\n              console.log(response.data)\n         });\n\t} else {\n        this.setState({\n            passMatch: false,\n        });\n    }\n\t//need a way to notify user if password and confirmPassword are not equal\n  }\n\n  render() {\n      return (\n        <div className=\"signuppage\">\n          <h1>Sign Up </h1>\n          <br/>\n          <FormGroup size = \"lg\">\n            <FormControl\n                autoFocus\n                value={this.state.username}\n                onChange={this.handleChange.bind(this)}\n                placeholder=\"Enter username\"\n            />\n          </FormGroup>\n\n          <FormGroup controlId=\"password\" size = \"lg\">\n             <FormControl\n                value={this.state.password}\n                onChange={this.handleChange.bind(this)}\n                type=\"password\"\n                placeholder=\"Enter Password\"\n              />\n          </FormGroup>\n\n          <FormGroup controlId=\"confirmPassword\" size = \"lg\">\n            <FormControl\n                value={this.state.confirmPassword}\n                onChange={this.handleChange.bind(this)}\n                type=\"password\"\n                placeholder=\"Enter Password\"\n            />\n          </FormGroup>\n\n          { this.state.passMatch ? null : <h6>Passwords do not match</h6> }\n          { this.state.badUsername ? <h6>Username already in use</h6> : null }\n\n          <h5>Already a user? <a href=\"/login\" > Log in</a></h5>\n\n          <br/><br/>\n    \n          <button block size=\"lg\" onClick = {this.handleRegisterButtonClick} > \n              Register\n          </button>\n        </div>\n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}