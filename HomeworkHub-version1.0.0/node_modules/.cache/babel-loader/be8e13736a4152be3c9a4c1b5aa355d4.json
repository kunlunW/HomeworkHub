{"ast":null,"code":"var _jsxFileName = \"/Users/kunlunwang/Documents/GitHub/HomeworkHub/HomeworkHub-version1.0.0/src/views/Table.js\";\nimport React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst products = [{\n  id: 1,\n  due: 10,\n  name: \"apple\",\n  price: 1\n}, {\n  id: 2,\n  due: 9,\n  name: \"orange\",\n  price: 2\n}, {\n  id: 3,\n  due: 8,\n  name: \"banana\",\n  price: 3\n}, {\n  id: 4,\n  due: 7,\n  name: \"peach\",\n  price: 2\n}, {\n  id: 5,\n  due: 6,\n  name: \"carrot\",\n  price: 1\n}, {\n  id: 6,\n  due: 5,\n  name: \"grapes\",\n  price: 4\n} //   { id: 7, name: \"mango\", price: 1 },\n//   { id: 8, name: \"potatoe\", price: 3 },\n//   { id: 9, name: \"onion\", price: 3 }\n];\nconst columns = [{\n  dataField: \"id\",\n  text: \"HW ID\",\n  sort: true\n}, {\n  dataField: \"due\",\n  text: \"due dates\",\n  sort: true\n}, {\n  dataField: \"name\",\n  text: \"Product Name\",\n  sort: true\n}, {\n  dataField: \"price\",\n  text: \"Link to HW\",\n  sort: true,\n  validator: (newValue, row, column) => {\n    if (isNaN(newValue)) {\n      return {\n        valid: false,\n        message: \"Price should be numeric\"\n      };\n    }\n\n    if (newValue > 5) {\n      return {\n        valid: false,\n        message: \"Price should less than 6\"\n      };\n    }\n\n    return true;\n  }\n}];\nconst defaultSorted = [{\n  dataField: \"name\",\n  order: \"desc\"\n}];\nexport default class Table extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(BootstrapTable, {\n      bootstrap4: true,\n      keyField: \"id\",\n      data: products,\n      columns: columns,\n      defaultSorted: defaultSorted,\n      cellEdit: cellEditFactory({\n        mode: \"click\",\n        blurToSave: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kunlunwang/Documents/GitHub/HomeworkHub/HomeworkHub-version1.0.0/src/views/Table.js"],"names":["React","BootstrapTable","cellEditFactory","products","id","due","name","price","columns","dataField","text","sort","validator","newValue","row","column","isNaN","valid","message","defaultSorted","order","Table","Component","render","mode","blurToSave"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\n\nconst products = [\n  { id: 1, due: 10, name: \"apple\", price: 1 },\n  { id: 2, due: 9, name: \"orange\", price: 2 },\n  { id: 3, due: 8, name: \"banana\", price: 3 },\n  { id: 4, due: 7, name: \"peach\", price: 2 },\n  { id: 5, due: 6, name: \"carrot\", price: 1 },\n  { id: 6, due: 5, name: \"grapes\", price: 4 },\n//   { id: 7, name: \"mango\", price: 1 },\n//   { id: 8, name: \"potatoe\", price: 3 },\n//   { id: 9, name: \"onion\", price: 3 }\n];\n\nconst columns = [\n  {\n    dataField: \"id\",\n    text: \"HW ID\",\n    sort: true\n  },\n\n  {\n    dataField: \"due\",\n    text: \"due dates\",\n    sort: true\n  },\n\n  {\n    dataField: \"name\",\n    text: \"Product Name\",\n    sort: true\n  },\n\n  {\n    dataField: \"price\",\n    text: \"Link to HW\",\n    sort: true,\n    validator: (newValue, row, column) => {\n      if (isNaN(newValue)) {\n        return {\n          valid: false,\n          message: \"Price should be numeric\"\n        };\n      }\n      if (newValue > 5) {\n        return {\n          valid: false,\n          message: \"Price should less than 6\"\n        };\n      }\n      return true;\n    }\n  }\n];\n\nconst defaultSorted = [\n  {\n    dataField: \"name\",\n    order: \"desc\"\n  }\n];\n\nexport default class Table extends React.Component {\n  render() {\n    return (\n      <BootstrapTable\n        bootstrap4\n        keyField=\"id\"\n        data={products}\n        columns={columns}\n        defaultSorted={defaultSorted}\n        cellEdit={cellEditFactory({\n          mode: \"click\",\n          blurToSave: true\n        })}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}