{"ast":null,"code":"var _jsxFileName = \"/Users/kunlunwang/Documents/GitHub/HomeworkHub/HomeworkHub-version1.0.0/src/views/contexts_test/EmployeeContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EmployeeContext = /*#__PURE__*/createContext();\n\nconst EmployeeContextProvider = props => {\n  _s();\n\n  const [test, setEmployees] = useState([{\n    id: uuidv4(),\n    name: 'Test1',\n    Time: 'test@badger.com',\n    address: '123 Badger St, WI, USA',\n    phone: '(123)456789'\n  }]);\n  useEffect(() => {\n    setEmployees(JSON.parse(localStorage.getItem('test')));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('test', JSON.stringify(test));\n  });\n  const sortedEmployees = test.sort((a, b) => a.name < b.name ? -1 : 1);\n\n  const addEmployee = (name, email, address, phone) => {\n    setEmployees([...test, {\n      id: uuidv4(),\n      name,\n      email,\n      address,\n      phone\n    }]);\n  };\n\n  const deleteEmployee = id => {\n    setEmployees(test.filter(employee => employee.id !== id));\n  };\n\n  const updateEmployee = (id, updatedEmployee) => {\n    setEmployees(test.map(employee => employee.id === id ? updatedEmployee : employee));\n  };\n\n  return /*#__PURE__*/_jsxDEV(EmployeeContext.Provider, {\n    value: {\n      sortedEmployees,\n      addEmployee,\n      deleteEmployee,\n      updateEmployee\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployeeContextProvider, \"JKs8Xe5c8Lgpw00X0rPE0aS2m7Q=\");\n\n_c = EmployeeContextProvider;\nexport default EmployeeContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeContextProvider\");","map":{"version":3,"sources":["/Users/kunlunwang/Documents/GitHub/HomeworkHub/HomeworkHub-version1.0.0/src/views/contexts_test/EmployeeContext.js"],"names":["createContext","useEffect","useState","v4","uuidv4","EmployeeContext","EmployeeContextProvider","props","test","setEmployees","id","name","Time","address","phone","JSON","parse","localStorage","getItem","setItem","stringify","sortedEmployees","sort","a","b","addEmployee","email","deleteEmployee","filter","employee","updateEmployee","updatedEmployee","map","children"],"mappings":";;;AAAA,SAAQA,aAAR,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,OAAO,MAAMC,eAAe,gBAAGL,aAAa,EAArC;;AAEP,MAAMM,uBAAuB,GAAKC,KAAD,IAAW;AAAA;;AAExC,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBP,QAAQ,CAAC,CAClC;AAACQ,IAAAA,EAAE,EAACN,MAAM,EAAV;AAAcO,IAAAA,IAAI,EAAE,OAApB;AAA6BC,IAAAA,IAAI,EAAE,iBAAnC;AAAsDC,IAAAA,OAAO,EAAE,wBAA/D;AAAyFC,IAAAA,KAAK,EAAE;AAAhG,GADkC,CAAD,CAArC;AAKJb,EAAAA,SAAS,CAAC,MAAK;AACXQ,IAAAA,YAAY,CAACM,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAD,CAAZ;AACH,GAFQ,EAEP,EAFO,CAAT;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,YAAY,CAACE,OAAb,CAAqB,MAArB,EAA6BJ,IAAI,CAACK,SAAL,CAAeZ,IAAf,CAA7B;AACH,GAFQ,CAAT;AAMA,QAAMa,eAAe,GAAGb,IAAI,CAACc,IAAL,CAAU,CAACC,CAAD,EAAGC,CAAH,KAAQD,CAAC,CAACZ,IAAF,GAASa,CAAC,CAACb,IAAX,GAAkB,CAAC,CAAnB,GAAuB,CAAzC,CAAxB;;AAIA,QAAMc,WAAW,GAAG,CAACd,IAAD,EAAOe,KAAP,EAAcb,OAAd,EAAuBC,KAAvB,KAAiC;AACjDL,IAAAA,YAAY,CAAC,CAAC,GAAGD,IAAJ,EAAW;AAACE,MAAAA,EAAE,EAACN,MAAM,EAAV;AAAcO,MAAAA,IAAd;AAAoBe,MAAAA,KAApB;AAA2Bb,MAAAA,OAA3B;AAAoCC,MAAAA;AAApC,KAAX,CAAD,CAAZ;AACH,GAFD;;AAIA,QAAMa,cAAc,GAAIjB,EAAD,IAAQ;AAC3BD,IAAAA,YAAY,CAACD,IAAI,CAACoB,MAAL,CAAYC,QAAQ,IAAIA,QAAQ,CAACnB,EAAT,KAAgBA,EAAxC,CAAD,CAAZ;AACH,GAFD;;AAIA,QAAMoB,cAAc,GAAG,CAACpB,EAAD,EAAKqB,eAAL,KAAyB;AAC5CtB,IAAAA,YAAY,CAACD,IAAI,CAACwB,GAAL,CAAUH,QAAD,IAAcA,QAAQ,CAACnB,EAAT,KAAgBA,EAAhB,GAAqBqB,eAArB,GAAuCF,QAA9D,CAAD,CAAZ;AACH,GAFD;;AAII,sBACI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAACR,MAAAA,eAAD;AAAkBI,MAAAA,WAAlB;AAA+BE,MAAAA,cAA/B;AAA+CG,MAAAA;AAA/C,KAAjC;AAAA,cACKvB,KAAK,CAAC0B;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtCD;;GAAM3B,uB;;KAAAA,uB;AAwCN,eAAeA,uBAAf","sourcesContent":["import {createContext, useEffect, useState} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const EmployeeContext = createContext()\n\nconst EmployeeContextProvider  = (props) => {\n\n    const [test, setEmployees] = useState([\n        {id:uuidv4(), name: 'Test1', Time: 'test@badger.com', address: '123 Badger St, WI, USA', phone: '(123)456789'},\n  \n])\n\nuseEffect(()=> {\n    setEmployees(JSON.parse(localStorage.getItem('test')))\n},[])\n\nuseEffect(() => {\n    localStorage.setItem('test', JSON.stringify(test));\n})\n\n\n\nconst sortedEmployees = test.sort((a,b)=>(a.name < b.name ? -1 : 1));\n\n\n\nconst addEmployee = (name, email, address, phone) => {\n    setEmployees([...test , {id:uuidv4(), name, email, address, phone}])\n}\n\nconst deleteEmployee = (id) => {\n    setEmployees(test.filter(employee => employee.id !== id))\n}\n\nconst updateEmployee = (id, updatedEmployee) => {\n    setEmployees(test.map((employee) => employee.id === id ? updatedEmployee : employee))\n}\n\n    return (\n        <EmployeeContext.Provider value={{sortedEmployees, addEmployee, deleteEmployee, updateEmployee}}>\n            {props.children}\n        </EmployeeContext.Provider>\n    )\n}\n\nexport default EmployeeContextProvider;"]},"metadata":{},"sourceType":"module"}