{"ast":null,"code":"var _jsxFileName = \"/Users/kunlunwang/Documents/GitHub/HomeworkHub/HomeworkHub-version1.0.0/src/views/components_test/EditForm.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button } from \"react-bootstrap\";\nimport { EmployeeContext1 } from '../contexts_test/EmployeeContext';\nimport { useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditForm = ({\n  theEmployee\n}) => {\n  _s();\n\n  const id = theEmployee.id;\n  const [name, setName] = useState(theEmployee.name);\n  const [email, setEmail] = useState(theEmployee.email);\n  const [address, setAddress] = useState(theEmployee.address);\n  const [phone, setPhone] = useState(theEmployee.phone);\n  const {\n    updateEmployee\n  } = useContext(EmployeeContext);\n  const updatedEmployee = {\n    id,\n    name,\n    email,\n    address,\n    phone\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateEmployee(id, updatedEmployee);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Name *\",\n        name: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Email *\",\n        name: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        placeholder: \"Address\",\n        rows: 3,\n        name: \"address\",\n        value: address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Phone\",\n        name: \"phone\",\n        value: phone,\n        onChange: e => setPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      block: true,\n      children: \"Edit Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditForm, \"LhpsoqQkQJJyALr522dsN/QF/ns=\");\n\n_c = EditForm;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["/Users/kunlunwang/Documents/GitHub/HomeworkHub/HomeworkHub-version1.0.0/src/views/components_test/EditForm.js"],"names":["Form","Button","EmployeeContext1","useContext","useState","EditForm","theEmployee","id","name","setName","email","setEmail","address","setAddress","phone","setPhone","updateEmployee","EmployeeContext","updatedEmployee","handleSubmit","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import { Form, Button } from \"react-bootstrap\"\n\nimport {EmployeeContext1} from '../contexts_test/EmployeeContext';\nimport {useContext, useState} from 'react';\n\nconst EditForm = ({theEmployee}) =>{\n\n    const id = theEmployee.id;\n\n    const [name, setName] = useState(theEmployee.name);\n    const [email, setEmail] = useState(theEmployee.email);\n    const [address, setAddress] = useState(theEmployee.address);\n    const [phone, setPhone] = useState(theEmployee.phone);\n\n\n    const {updateEmployee} = useContext(EmployeeContext);\n\n    const updatedEmployee = {id, name, email, address, phone}\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        updateEmployee(id, updatedEmployee)\n    }\n\n     return (\n\n        <Form onSubmit={handleSubmit}>\n            <Form.Group>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Name *\"\n                    name=\"name\"\n                    value={name}\n                    onChange={(e)=> setName(e.target.value)}\n                    required\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email *\"\n                    name=\"email\"\n                    value={email}\n                    onChange={(e)=> setEmail(e.target.value)}\n                    required\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    as=\"textarea\"\n                    placeholder=\"Address\"\n                    rows={3}\n                    name=\"address\"\n                    value={address}\n                    onChange={(e)=> setAddress(e.target.value)}\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    onChange={(e)=> setPhone(e.target.value)}\n                />\n            </Form.Group>\n            <Button variant=\"success\" type=\"submit\" block>\n                Edit Test\n            </Button>\n        </Form>\n\n     )\n}\n\nexport default EditForm;\n"]},"metadata":{},"sourceType":"module"}